--- libao-1.1.0/src/plugins/irix/ao_irix.c~	2010-12-06 21:09:31.000000000 +0100
+++ libao-1.1.0/src/plugins/irix/ao_irix.c	2011-12-17 15:15:24.381600000 +0100
@@ -5,6 +5,7 @@
  *      Original Copyright (C) Aaron Holtzman - May 1999
  *      Port to IRIX by Jim Miller, SGI - Nov 1999
  *      Modifications Copyright (C) Stan Seibert - July 2000, July 2001
+ *      Port to Irix 6.2, 5.3 Copyright (C) Tom G. Christensen - November 2005
  *
  *  This file is part of libao, a cross-platform library.  See
  *  README for a history of this source code.
@@ -38,6 +39,29 @@
 
 #include <audio.h>
 
+/**
+ * If we're on Irix < 6.5(?) then we're using the old style dmedia API
+ */
+#ifndef AL_RESOURCE /* as a test whether we use the old IRIX audio libraries */
+#define OLD_IRIX_AUDIO
+#define alClosePort(x) ALcloseport(x)
+#define alFreeConfig(x) ALfreeconfig(x)
+#define alGetFillable(x) ALgetfillable(x)
+#define alNewConfig() ALnewconfig()
+#define alOpenPort(x,y,z) ALopenport(x,y,z)
+#define alSetChannels(x,y) ALsetchannels(x,y)
+#define alSetQueueSize(x,y) ALsetqueuesize(x,y)
+#define alGetQueueSize(x) ALgetqueuesize(x)
+#define alSetSampFmt(x,y) ALsetsampfmt(x,y)
+#define alSetWidth(x,y) ALsetwidth(x,y)
+#define alSetFillPoint(x,y) ALsetfillpoint(x,y)
+#define alGetFilled(x) ALgetfilled(x)
+#define alGetFD(x) ALgetfd(x)
+#define alWriteFrames(x,y,z) ALwritesamps(x,y,z)
+#define alReadFrames(x,y,z) ALreadsamps(x,y,z)
+#define alGetErrorString(x) x
+#endif
+
 #include <ao/ao.h>
 
 #define AO_IRIX_BUFFER_SIZE 32768
@@ -115,9 +139,16 @@
 int ao_plugin_open(ao_device *device, ao_sample_format *format)
 {
 	ao_irix_internal *internal = (ao_irix_internal *) device->internal;
+	
+	int  wsize = AL_SAMPLE_16;
+
+#ifdef OLD_IRIX_AUDIO
+	long params[2];
+	int dev = AL_DEFAULT_DEVICE;
+#else
 	ALpv params;
 	int  dev = AL_DEFAULT_OUTPUT;
-	int  wsize = AL_SAMPLE_16;
+#endif
 
 	if (alSetQueueSize(internal->alconfig, AO_IRIX_BUFFER_SIZE) < 0) {
 		aerror("alSetQueueSize failed: %s\n",
@@ -133,12 +164,13 @@
 
 	internal->channels = device->output_channels;
 
+#ifndef OLD_IRIX_AUDIO
 	if (alSetDevice(internal->alconfig, dev) < 0) {
 		aerror("alSetDevice failed: %s\n",
 			alGetErrorString(oserror()));
 		return 0;
 	}
-
+#endif
 	if (alSetSampFmt(internal->alconfig, AL_SAMPFMT_TWOSCOMP) < 0) {
 		aerror("alSetSampFmt failed: %s\n",
 			alGetErrorString(oserror()));
@@ -182,10 +214,21 @@
 		return 0;
 	}
 
+#ifdef OLD_IRIX_AUDIO
+    params[0] = AL_OUTPUT_RATE;
+    /* Irix old-style AL doesn't have alDoubleToFixed rate chooser
+     * but according to docs it will automatically pick the nearest
+     * supported rate
+     */
+    params[1] = format->rate;
+    if (ALsetparams(dev, params, 2) < 0)
+    {
+#else
 	params.param = AL_RATE;
 	params.value.ll = alDoubleToFixed((double) format->rate);
 	if (alSetParams(dev, &params, 1) < 0)
 	{
+#endif
 		aerror("alSetParams() failed: %s\n", alGetErrorString(oserror()));
 		alClosePort(internal->alport);
 		return 0;
@@ -211,10 +254,13 @@
 
 	num_frames = num_bytes;
 	num_frames /= internal->bytesPerSample;
+#ifdef OLD_IRIX_AUDIO
+	 ALwritesamps(internal->alport, (void*) output_samples, num_frames);
+#else
 	num_frames /= internal->channels;
 
 	alWriteFrames(internal->alport, output_samples, num_frames);
-
+#endif
 	return 1; /* FIXME: Need to check if the above function failed */
 }
 
