--- glib-2.18.2/gio/tests/live-g-file.c.orig	2008-11-16 10:21:32.590450000 +0100
+++ glib-2.18.2/gio/tests/live-g-file.c	2008-11-16 10:42:56.059402000 +0100
@@ -104,8 +104,6 @@
 static gboolean verbose;
 static gboolean posix_compat;
 
-#define log(msg...) if (verbose)  g_print (msg)
-
 static GFile *
 create_empty_file (GFile * parent, const char *filename,
 		   GFileCreateFlags create_flags)
@@ -173,7 +171,7 @@
   struct StructureItem item;
 
   g_assert (test_data != NULL);
-  log ("\n  Going to create testing structure in '%s'...\n",
+  if (verbose) g_print ("\n  Going to create testing structure in '%s'...\n",
        (char *) test_data);
 
   root = g_file_new_for_commandline_arg ((char *) test_data);
@@ -196,15 +194,15 @@
       switch (item.file_type)
 	{
 	case G_FILE_TYPE_REGULAR:
-	  log ("    Creating file '%s'...\n", item.filename);
+	  if (verbose) g_print ("    Creating file '%s'...\n", item.filename);
 	  child = create_empty_file (root, item.filename, item.create_flags);
 	  break;
 	case G_FILE_TYPE_DIRECTORY:
-	  log ("    Creating directory '%s'...\n", item.filename);
+	  if (verbose) g_print ("    Creating directory '%s'...\n", item.filename);
 	  child = create_empty_dir (root, item.filename);
 	  break;
 	case G_FILE_TYPE_SYMBOLIC_LINK:
-	  log ("    Creating symlink '%s' --> '%s'...\n", item.filename,
+	  if (verbose) g_print ("    Creating symlink '%s' --> '%s'...\n", item.filename,
 	       item.link_to);
 	  child = create_symlink (root, item.filename, item.link_to);
 	  break;
@@ -229,7 +227,7 @@
     }
 
   /*  create a pattern file  */
-  log ("    Creating pattern file...");
+  if (verbose) g_print ("    Creating pattern file...");
   child = g_file_get_child (root, "pattern_file");
   g_assert (child != NULL);
 
@@ -253,7 +251,7 @@
   g_object_unref (outds);
   g_object_unref (outs);
   g_object_unref (child);
-  log (" done.\n");
+  if (verbose) g_print (" done.\n");
 
   g_object_unref (root);
 }
@@ -382,7 +380,7 @@
 
 
   g_assert (test_data != NULL);
-  log ("\n  Testing sample structure in '%s'...\n", (char *) test_data);
+  if (verbose) g_print ("\n  Testing sample structure in '%s'...\n", (char *) test_data);
 
   root = g_file_new_for_commandline_arg ((char *) test_data);
   g_assert (root != NULL);
@@ -397,7 +395,7 @@
 	  || (item.handle_special))
 	continue;
 
-      log ("    Testing file '%s'...\n", item.filename);
+      if (verbose) g_print ("    Testing file '%s'...\n", item.filename);
 
       child = file_exists (root, item.filename, &res);
       g_assert (child != NULL);
@@ -416,7 +414,7 @@
     }
 
   /*  read and test the pattern file  */
-  log ("    Testing pattern file...\n");
+  if (verbose) g_print ("    Testing pattern file...\n");
   child = file_exists (root, "pattern_file", &res);
   g_assert (child != NULL);
   g_assert_cmpint (res, ==, TRUE);
@@ -446,7 +444,7 @@
 			     PATTERN_FILE_SIZE, NULL, &error);
       g_assert (error == NULL);
       total_read += read;
-      log ("      read %d bytes, total = %d of %d.\n", read, total_read,
+      if (verbose) g_print ("      read %d bytes, total = %d of %d.\n", read, total_read,
 	   PATTERN_FILE_SIZE);
     }
   g_assert_cmpint (total_read, ==, PATTERN_FILE_SIZE);
@@ -510,7 +508,7 @@
 	}
       g_assert_cmpint (found, ==, TRUE);
 
-      log ("  Found file %s, relative to root: %s\n",
+      if (verbose) g_print ("  Found file %s, relative to root: %s\n",
 	   g_file_info_get_display_name (info), relative_path);
 
       if (g_file_info_get_file_type (info) == G_FILE_TYPE_DIRECTORY)
@@ -535,7 +533,7 @@
   gboolean res;
 
   g_assert (test_data != NULL);
-  log ("\n  Traversing through the sample structure in '%s'...\n",
+  if (verbose) g_print ("\n  Traversing through the sample structure in '%s'...\n",
        (char *) test_data);
 
   root = g_file_new_for_commandline_arg ((char *) test_data);
@@ -564,7 +562,7 @@
 
 
   g_assert (test_data != NULL);
-  log ("\n  Test enumerate '%s'...\n", (char *) test_data);
+  if (verbose) g_print ("\n  Test enumerate '%s'...\n", (char *) test_data);
 
   root = g_file_new_for_commandline_arg ((char *) test_data);
   g_assert (root != NULL);
@@ -584,7 +582,7 @@
 	  || ((item.extra_flags & TEST_ENUMERATE_FILE) ==
 	      TEST_ENUMERATE_FILE))
 	{
-	  log ("    Testing file '%s'\n", item.filename);
+	  if (verbose) g_print ("    Testing file '%s'\n", item.filename);
 	  child = g_file_get_child (root, item.filename);
 	  g_assert (child != NULL);
 	  error = NULL;
@@ -638,7 +636,7 @@
   gboolean res;
   GError *error;
 
-  log ("    do_copy_move: '%s' --> '%s'\n", item.filename, target_dir);
+  if (verbose) g_print ("    do_copy_move: '%s' --> '%s'\n", item.filename, target_dir);
 
   dst_dir = g_file_get_child (root, target_dir);
   g_assert (dst_dir != NULL);
@@ -661,7 +659,7 @@
 		   NULL, NULL, &error);
 
   if (error)
-    log ("       res = %d, error code %d = %s\n", res, error->code,
+    if (verbose) g_print ("       res = %d, error code %d = %s\n", res, error->code,
 	 error->message);
 
   /*  copying file/directory to itself (".")  */
@@ -726,7 +724,7 @@
   int i;
   struct StructureItem item;
 
-  log ("\n");
+  if (verbose) g_print ("\n");
 
   g_assert (test_data != NULL);
   root = g_file_new_for_commandline_arg ((char *) test_data);
@@ -792,7 +790,7 @@
   GFileOutputStream *os;
 
   g_assert (test_data != NULL);
-  log ("\n");
+  if (verbose) g_print ("\n");
 
   root = g_file_new_for_commandline_arg ((char *) test_data);
   g_assert (root != NULL);
@@ -807,7 +805,7 @@
 	  ((item.extra_flags & TEST_REPLACE) == TEST_REPLACE) ||
 	  ((item.extra_flags & TEST_APPEND) == TEST_APPEND))
 	{
-	  log ("  test_create: '%s'\n", item.filename);
+	  if (verbose) g_print ("  test_create: '%s'\n", item.filename);
 
 	  child = g_file_get_child (root, item.filename);
 	  g_assert (child != NULL);
@@ -825,7 +823,7 @@
 
 
 	  if (error)
-	    log ("       error code %d = %s\n", error->code, error->message);
+	    if (verbose) g_print ("       error code %d = %s\n", error->code, error->message);
 
 	  if (((item.extra_flags & TEST_NOT_EXISTS) == 0) &&
 	      ((item.extra_flags & TEST_CREATE) == TEST_CREATE))
@@ -858,7 +856,7 @@
 	      res =
 		g_output_stream_close (G_OUTPUT_STREAM (os), NULL, &error);
 	      if (error)
-		log ("         g_output_stream_close: error %d = %s\n",
+		if (verbose) g_print ("         g_output_stream_close: error %d = %s\n",
 		     error->code, error->message);
 	      g_assert_cmpint (res, ==, TRUE);
 	      g_assert (error == NULL);
@@ -880,7 +878,7 @@
   GFileInputStream *input_stream;
 
   g_assert (test_data != NULL);
-  log ("\n");
+  if (verbose) g_print ("\n");
 
   root = g_file_new_for_commandline_arg ((char *) test_data);
   g_assert (root != NULL);
@@ -896,7 +894,7 @@
 
       if ((item.extra_flags & TEST_OPEN) == TEST_OPEN)
 	{
-	  log ("  test_open: '%s'\n", item.filename);
+	  if (verbose) g_print ("  test_open: '%s'\n", item.filename);
 
 	  child = g_file_get_child (root, item.filename);
 	  g_assert (child != NULL);
@@ -950,7 +948,7 @@
   struct StructureItem item;
 
   g_assert (test_data != NULL);
-  log ("\n");
+  if (verbose) g_print ("\n");
 
   root = g_file_new_for_commandline_arg ((char *) test_data);
   g_assert (root != NULL);
@@ -971,7 +969,7 @@
 	  g_assert (child != NULL);
 	  /*  we don't care about result here  */
 
-	  log ("  Deleting %s, path = %s\n", item.filename,
+	  if (verbose) g_print ("  Deleting %s, path = %s\n", item.filename,
 	       g_file_get_path (child));
 	  error = NULL;
 	  if ((item.extra_flags & TEST_DELETE_NORMAL) == TEST_DELETE_NORMAL)
@@ -1001,7 +999,7 @@
 
 	  if (error)
 	    {
-	      log ("      result = %d, error = %s\n", res, error->message);
+	      if (verbose) g_print ("      result = %d, error = %s\n", res, error->message);
 	      g_error_free (error);
 	    }
 
@@ -1041,7 +1039,7 @@
       relative_path = g_file_get_relative_path (root, descend);
       g_assert (relative_path != NULL);
 
-      log ("    deleting '%s'\n", g_file_info_get_display_name (info));
+      if (verbose) g_print ("    deleting '%s'\n", g_file_info_get_display_name (info));
 
       if (g_file_info_get_file_type (info) == G_FILE_TYPE_DIRECTORY)
     	  cleanup_dir_recurse (descend, root);
@@ -1068,7 +1066,7 @@
   GFile *root;
   
   g_assert (test_data != NULL);
-  log ("\n  Cleaning target testing structure in '%s'...\n",
+  if (verbose) g_print ("\n  Cleaning target testing structure in '%s'...\n",
        (char *) test_data);
 
   root = g_file_new_for_commandline_arg ((char *) test_data);
