--- m4-1.4.16/lib/verror.h.orig	2011-03-16 09:16:29.940000000 +0100
+++ m4-1.4.16/lib/verror.h	2011-03-16 09:18:22.720000000 +0100
@@ -20,6 +20,18 @@
 #include "error.h"
 #include <stdarg.h>
 
+/* The __attribute__ feature is available in gcc versions 2.5 and later.
+ *    The __-protected variants of the attributes 'format' and 'printf' are
+ *       accepted by gcc versions 2.6.4 (effectively 2.7) and later.
+ *          We enable _GL_ATTRIBUTE_FORMAT only if these are supported too, because
+ *             gnulib and libintl do '#define printf __printf__' when they override
+ *                the 'printf' function.  */
+#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 7)
+# define _GL_ATTRIBUTE_FORMAT(spec) __attribute__ ((__format__ spec))
+#else
+# define _GL_ATTRIBUTE_FORMAT(spec) /* empty */
+#endif
+
 #ifdef __cplusplus
 extern "C" {
 #endif
@@ -32,7 +44,7 @@
 
 extern void verror (int __status, int __errnum, const char *__format,
                     va_list __args)
-     __attribute__ ((__format__ (__printf__, 3, 0)));
+     _GL_ATTRIBUTE_FORMAT ((__printf__, 3, 0));
 
 /* Print a message with `vfprintf (stderr, FORMAT, ARGS)';
    if ERRNUM is nonzero, follow it with ": " and strerror (ERRNUM).
@@ -44,7 +56,7 @@
 extern void verror_at_line (int __status, int __errnum, const char *__fname,
                             unsigned int __lineno, const char *__format,
                             va_list __args)
-     __attribute__ ((__format__ (__printf__, 5, 0)));
+     _GL_ATTRIBUTE_FORMAT ((__printf__, 5, 0));
 
 #ifdef __cplusplus
 }
