--- g/mpz/gcd_ui.c.~1.10.~	2002-05-23 11:50:20.000000000 +1000
+++ g/mpz/gcd_ui.c	2003-04-06 16:08:18.000000000 +1000
@@ -58,8 +58,9 @@
 	    }
 	  SIZ(w) = un;
 	}
-      /* We can't return any useful result for gcd(big,0).  */
-      return un > 1 ? 0 : PTR(u)[0];
+      /* Return u if it fits a ulong, otherwise 0. */
+      res = PTR(u)[0];
+      return (un == 1 && res <= ULONG_MAX ? res : 0);
     }
   else
     res = mpn_gcd_1 (PTR(u), un, (mp_limb_t) v);
--- g/gmp-impl.h~	2002-12-22 16:22:13.000000000 +1000
+++ g/gmp-impl.h	2003-04-09 08:42:03.000000000 +1000
@@ -2531,6 +2531,7 @@
  || defined (__pyr__)							\
  || defined (__ibm032__)						\
  || defined (_IBMR2) || defined (_ARCH_PPC)				\
+ || defined (__s390__)							\
  || defined (__sh__)							\
  || defined (__sparc) || defined (sparc) || defined (__sparc__)		\
  || defined (__sparc_v9) || defined (__sparc_v9__)			\
--- g/gmpxx.h.old	2002-11-20 06:46:56.000000000 +1000
+++ g/gmpxx.h	2003-06-20 17:11:43.000000000 +1000
@@ -681,7 +681,11 @@
     if (mpz_fits_slong_p(w))
       mpz_set_si(z, l / mpz_get_si(w));
     else
-      mpz_set_si(z, 0);
+      {
+        /* if w is bigger than a long then the quotient must be zero, unless
+           l==LONG_MIN and w==-LONG_MIN in which case the quotient is -1 */
+        mpz_set_si (z, (mpz_cmpabs_ui (w, (l >= 0 ? l : -l)) == 0 ? -1 : 0));
+      }
   }
   static void eval(mpz_ptr z, mpz_srcptr w, double d)
   {
@@ -872,17 +876,18 @@
   }
   static void eval(mpz_ptr z, mpz_srcptr w, signed long int l)
   {
-    if (l >= 0)
-      mpz_mod_ui(z, w, l);
-    else
-      mpz_mod_ui(z, w, -l);
+    mpz_tdiv_r_ui (z, w, (l >= 0 ? l : -l));
   }
   static void eval(mpz_ptr z, signed long int l, mpz_srcptr w)
   {
     if (mpz_fits_slong_p(w))
       mpz_set_si(z, l % mpz_get_si(w));
     else
-      mpz_set_si(z, l);
+      {
+        /* if w is bigger than a long then the remainder is l unchanged,
+           unless l==LONG_MIN and w==-LONG_MIN in which case it's 0 */
+        mpz_set_si (z, mpz_cmpabs_ui (w, (l >= 0 ? l : -l)) == 0 ? 0 : l);
+      }
   }
   static void eval(mpz_ptr z, mpz_srcptr w, double d)
   {
--- g/longlong.h.old	2003-07-29 17:10:52.000000000 +1000
+++ g/longlong.h	2003-07-29 17:12:16.000000000 +1000
@@ -715,8 +715,10 @@
   } while (0)
 #define count_trailing_zeros(count, x)					\
   do {									\
+    UDItype __cbtmp;							\
     ASSERT ((x) != 0);							\
-    __asm__ ("bsfq %1,%0" : "=r" (count) : "rm" ((UDItype)(x)));	\
+    __asm__ ("bsfq %1,%0" : "=r" (__cbtmp) : "rm" ((UDItype)(x)));	\
+    (count) = __cbtmp;							\
   } while (0)
 #endif /* x86_64 */
 
--- g/mpfrxx.h.old	2003-08-17 09:22:32.000000000 +1000
+++ g/mpfrxx.h	2003-08-17 09:22:43.000000000 +1000
@@ -480,7 +480,7 @@
 inline void __gmp_set_expr
 (mpfr_ptr f, const __gmp_expr<__gmpf_value, T> &expr)
 {
-  mpq_class temp(expr);
+  mpf_class temp(expr);
   mpfr_set_f(f, temp.get_mpf_t(), __gmp_default_rounding_mode);
 }
 
